diff --git a/include/zephyr/net/net_context.h b/include/zephyr/net/net_context.h
index 78a88aec0f..a5dc1c54e6 100644
--- a/include/zephyr/net/net_context.h
+++ b/include/zephyr/net/net_context.h
@@ -435,7 +435,7 @@ static inline void net_context_set_accepting(struct net_context *context,
 	if (accepting) {
 		context->flags |= NET_CONTEXT_ACCEPTING_SOCK;
 	} else {
-		context->flags &= ~NET_CONTEXT_ACCEPTING_SOCK;
+	  context->flags &= (uint16_t)~NET_CONTEXT_ACCEPTING_SOCK;
 	}
 }
 
@@ -467,7 +467,7 @@ static inline void net_context_set_closing(struct net_context *context,
 	if (closing) {
 		context->flags |= NET_CONTEXT_CLOSING_SOCK;
 	} else {
-		context->flags &= ~NET_CONTEXT_CLOSING_SOCK;
+	  context->flags &= (uint16_t)~NET_CONTEXT_CLOSING_SOCK;
 	}
 }
 
@@ -547,7 +547,7 @@ static inline void net_context_set_family(struct net_context *context,
 	if (family == AF_UNSPEC || family == AF_INET || family == AF_INET6 ||
 	    family == AF_PACKET || family == AF_CAN) {
 		/* Family is in BIT(4), BIT(5) and BIT(6) */
-		flag = family << 3;
+	  flag = (uint8_t)(family << 3);
 	}
 
 	context->flags |= flag;
@@ -589,7 +589,7 @@ static inline void net_context_set_type(struct net_context *context,
 
 	if (type == SOCK_DGRAM || type == SOCK_STREAM || type == SOCK_RAW) {
 		/* Type is in BIT(6) and BIT(7)*/
-		flag = type << 6;
+	  flag = (uint16_t)(type << 6);
 	}
 
 	context->flags |= flag;
@@ -707,7 +707,7 @@ static inline void net_context_set_iface(struct net_context *context,
 {
 	NET_ASSERT(iface);
 
-	context->iface = net_if_get_by_iface(iface);
+	context->iface = (uint8_t)net_if_get_by_iface(iface);
 }

 /**
@@ -883,6 +883,7 @@ static inline void net_context_set_proxy_enabled(struct net_context *context,
 #if defined(CONFIG_SOCKS)
 static inline bool net_context_is_proxy_enabled(struct net_context *context)
 {
+        ARG_UNUSED(context);
 	return context->proxy_enabled;
 }
 #else
@@ -1004,6 +1005,10 @@ static inline int net_context_create_ipv6_new(struct net_context *context,
 					      const struct in6_addr *src,
 					      const struct in6_addr *dst)
 {
+        ARG_UNUSED(context);
+	ARG_UNUSED(pkt);
+	ARG_UNUSED(src);
+	ARG_UNUSED(dst);
 	return -1;
 }
 #endif /* CONFIG_NET_IPV6 */
